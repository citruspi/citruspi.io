{% extends 'streams/blog/post.j2' %}
{% block post %}
<h1>Preface</h1>

<p>When I heard, last week, that Kali Linux 1.0 (Backtrack 6) was out, I was excited. When I got to the <a href="https://www.kali.org/downloads/">download page</a> and saw that there were build images for my Raspberry Pi and Samsung Chromebook, I was ecstatic.</p>

<p>The Kali site has an <a href="http://docs.kali.org/armel-armhf/install-kali-samsung-chromebook">article on installing it on the Chromebook</a>, but I couldn't get it to work. It</p>

<ul>
<li>has quite a few errors <sup>1</sup></li>
<li>is vague about what to do at certain points</li>
</ul>

<p>So, having managed to get it running on my Chromebook, I figured I would document the steps I took.</p>

<h1>Prerequisites</h1>

<ul>
<li>Samsung ARM Series 3 Chromebook (<strong>Dev Mode Enabled!</strong>)</li>
<li>Another computer (to write the disk image)</li>
<li>8+ GB USB Drive or SD Card</li>
</ul>

<h1>Download &amp; Write</h1>

<p>Download Kali Linux for the Chromebook from <a href="http://cdimage.kali.org/kali-images/kali-linux-1.0-armhf-chrome.img.gz">here</a> and extract the <code>.img</code> file from the gunzip archive.</p>

<p>I opted to use <a href="http://sourceforge.net/projects/win32diskimager/">Win32 Disk Imager</a> to write the image to my flash drive. It can also be used to write the image to an SD Card.</p>

<h1>Modify</h1>

<p>Plug your flash drive (USB 2.0 port) or SD card into the Chromebook. Open the <strong>shell</strong> through the <code>CROSH</code>:</p>

<ol>
<li>Control + Alt + T</li>
<li>Type in <code>shell</code> and press <code>return</code></li>
</ol>

<p>List the devices:</p>

{% highlight 'bash' %}
$ lsblk | grep disk
{% endhighlight %}

<p>If you have a flash drive, you should see <code>sda</code>. If you have an SD Card, it should be <code>mmcblk1</code>.</p>

<p>Depending on what you use, there are a different set of instructions below.</p>

<h1>Flash Drive</h1>

{% highlight 'bash' %}
$ sudo cgpt repair /dev/sda

# Now, we set the priority of the boot partitions.
$ sudo cgpt add -i 1 -T 5 -P 5 -l KERN-A /dev/sda
$ sudo cgpt add -i 2 -T 5 -P 10 -l KERN-B /dev/sda
{% endhighlight %}

<p>Now, if you run</p>

{% highlight 'bash' %}
$ sudo cgpt show /dev/sda
{% endhighlight %}

<p>it should look similar to this:</p>

{% highlight 'bash' %}
    start        size    part   contents
        0           1           PMBR
        1           1           Pri GPT header
        2          32           Pri GPT table
     8192       32768      1   Label: "KERN-A"
                                 Type: ChromeOS kernel
                                 UUID: 63AD6EC9-AD94-4B42-80E4-798BBE6BE46C
                                 Attr: priority=5 tries=5 successful=1
    40960       32768      2   Label: "KERN-B"
                                 Type: ChromeOS kernel
                                 UUID: 37CE46C9-0A7A-4994-80FC-9C0FFCB4FDC1
                                 Attr: priority=10 tries=5 successful=1
    73728     3832490      3   Label: "Linux filesystem"
                                 Type: 0FC63DAF-8483-4772-8E79-3D69D8477DE4
                                 UUID: E9E67EE1-C02E-481C-BA3F-18E721515DBB
125045391          32           Sec GPT table
125045423           1           Sec GPT header
{% endhighlight %}

<p>Then, we enable cross system booting:</p>

{% highlight 'bash' %}
$ sudo crossystem dev_boot_usb=1
{% endhighlight %}

<p><a href="http://i.imgur.com/fZPouot.png"><img alt="" width="100%" src="http://i.imgur.com/fZPouot.png" /></a></p>

<h1>SD Card</h1>

<p><strike><em>I have not tested these instructions yet - I've only used my flash drive. However, in theory, they should work. I'd be grateful if someone tested this and reported back.</em></strike></p>

<p>(The instructions for the SD Card were verified by a reader on 13 June 2013).</p>

{% highlight 'bash' %}
$ sudo cgpt repair /dev/mmcblk1
{% endhighlight %}

<p>Now, we set the priority of the boot partitions.</p>

{% highlight 'bash' %}
$ sudo cgpt add -i 1 -T 5 -P 10 -l KERN-A /dev/mmcblk1
$ sudo cgpt add -i 2 -T 5 -P 5 -l KERN-B /dev/mmcblk1
{% endhighlight %}

<p>Now, if you run</p>

{% highlight 'bash' %}
$ sudo cgpt show /dev/mmcblk1
{% endhighlight %}

<p>it should look similar to this:</p>

{% highlight 'bash' %}
    start        size    part   contents
        0           1           PMBR
        1           1           Pri GPT header
        2          32           Pri GPT table
     8192       32768      1    Label: "KERN-A"
                                     Type: ChromeOS kernel
                                     UUID: 63AD6EC9-AD94-4B42-80E4-798BBE6BE46C
                                     Attr: priority=10 tries=5 successful=1
    40960       32768      2    Label: "KERN-B"
                                     Type: ChromeOS kernel
                                     UUID: 37CE46C9-0A7A-4994-80FC-9C0FFCB4FDC1
                                     Attr: priority=5 tries=5 successful=1
    73728     3832490      3    Label: "Linux filesystem"
                                     Type: 0FC63DAF-8483-4772-8E79-3D69D8477DE4
                                     UUID: E9E67EE1-C02E-481C-BA3F-18E721515DBB
125045391          32           Sec GPT table
125045423           1           Sec GPT header
{% endhighlight %}

<p>Then, we enable cross system booting:</p>

{% highlight 'bash' %}
$ sudo crossystem dev_boot_usb=1
{% endhighlight %}

<h1>Wrap Up</h1>

<p>When you see the <em>OS Verification is Off</em> screen on boot up, press <code>Control + U</code> to boot into Kali Linux or <code>Control + D</code> to boot into Chrome OS (but you already knew that, right?).</p>

<p>Login with</p>

<table>

    <tr>
        <td>username</td>
        <td>password</td>
    </tr>

    <tr>
        <td>root</td>
        <td>toor</td>
    </tr>

</table>

<p>You can use <code>startx</code> to launch the GUI.</p>

<p><a href="http://i.imgur.com/SX1aW1l.jpg"><img alt="" width="100%" src="http://i.imgur.com/SX1aW1l.jpg" /></a>
<a href="http://i.imgur.com/RTDDVws.jpg"><img alt="" width="100%" src="http://i.imgur.com/RTDDVws.jpg" /></a></p>

<h1>Bugs</h1>

<p>There are a few...</p>

<ul>
<li>Web browser doesn't work ("Failed to execute default Web Browser")</li>
<li>Terminal Emulator windows disappear, leaving just the title bar (?)</li>
</ul>

<h1>Notes</h1>

<ul>
<li>If you swipe horizontally with two fingers, you can scroll through the different workspaces.</li>
<li>Trackpad performance appears to be better than that of ChrUbuntu.</li>
</ul>

<hr />

<p>[1]: One such error? The instructions on Kali.org reference <code>/dev/sdb</code>. However, <code>/dev/sdb</code> is the location of a flash drive plugged into an <strong>Intel Chromebook</strong>. The location of a flash drive on the <strong>ARM Chromebook</strong> is <code>/dev/sda</code>.</p>
{% endblock %}
